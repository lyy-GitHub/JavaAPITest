<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="2" hostname="ADOE-20150303CS" name="com.yy.test.NewTest" tests="19" failures="1" timestamp="07 十一月 2018 05:31:22 GMT" time="4.433" errors="0">
  <testcase name="f" time="0.135" classname="com.yy.test.NewTest"/>
  <testcase name="f" time="0.142" classname="com.yy.test.NewTest"/>
  <testcase name="test3" time="0.004" classname="com.yy.test.NewTest">
    <skipped/>
  </testcase> <!-- test3 -->
  <testcase name="f" time="1.451" classname="com.yy.test.NewTest"/>
  <testcase name="f" time="0.215" classname="com.yy.test.NewTest"/>
  <testcase name="f" time="0.143" classname="com.yy.test.NewTest"/>
  <testcase name="f" time="0.223" classname="com.yy.test.NewTest"/>
  <testcase name="f" time="0.150" classname="com.yy.test.NewTest"/>
  <testcase name="test3" time="0.002" classname="com.yy.test.NewTest">
    <failure type="java.lang.AssertionError" message="expected [1] but found [2]">
      <![CDATA[java.lang.AssertionError: expected [1] but found [2]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:189)
	at org.testng.Assert.assertEquals(Assert.java:199)
	at com.yy.test.NewTest.test3(NewTest.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:1014)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1215)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
    </failure>
  </testcase> <!-- test3 -->
  <testcase name="f" time="0.138" classname="com.yy.test.NewTest"/>
  <testcase name="f" time="0.198" classname="com.yy.test.NewTest"/>
  <testcase name="f" time="0.247" classname="com.yy.test.NewTest"/>
  <testcase name="test2" time="0.002" classname="com.yy.test.NewTest"/>
  <testcase name="test3" time="0.009" classname="com.yy.test.NewTest">
    <skipped/>
  </testcase> <!-- test3 -->
  <testcase name="f" time="0.154" classname="com.yy.test.NewTest"/>
  <testcase name="test1" time="0.007" classname="com.yy.test.NewTest"/>
  <testcase name="f" time="0.858" classname="com.yy.test.NewTest"/>
  <testcase name="f" time="0.176" classname="com.yy.test.NewTest"/>
  <testcase name="f" time="0.179" classname="com.yy.test.NewTest"/>
</testsuite> <!-- com.yy.test.NewTest -->
